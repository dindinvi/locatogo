<?php
 
namespace djepo\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
/**
 * PersonneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonneRepository extends EntityRepository
{
    
	public function recupDonneesPersonne()
	{
	 $sql = 'select  nom, prenom, typeEntite, telFixe, telPortable
      	  from client, personne
	    where
		  client.idPersonne = personne.idPersonne and
		  client.membre_pseudo = ?';
			
		
	$this->selectById= Controller_Template::$db->prepare($sql);
     return $this->selectById;  

     
    }
    
    public function recupReqClientForProfil()
	{
	 $sql = 'SELECT membre_pseudo, membre_avatar, 
	 membre_mail, membre_msn, membre_signature, 
	 membre_siteweb, membre_post, membre_inscription
            FROM client WHERE membre_id= ?';
			
		
	$this->selectById= Controller_Template::$db->prepare($sql);
     return $this->selectById;  

    }
	
	
	public function recupReqClientForModifProfil()
	{
	 $sql = 'SELECT membre_pseudo, membre_mail,
          membre_siteweb, membre_signature, membre_msn,
          membre_avatar
          FROM client WHERE membre_id = ?';
		$this->selectById= Controller_Template::$db->prepare($sql);
     return $this->selectById;  
	}
	
	
	/* SECTION ADMINISTRATION**********************************************/
	
	
	   public function recupReqC($type) 
	{
	    switch($type)
          {
		  
		    case 'editClientData' :
	             $sql= 'SELECT membre_id, 
					membre_pseudo, membre_email,
					membre_siteweb, membre_signature, 
					membre_msn, membre_avatar
					FROM client WHERE membre_pseudo=?';
				break;
				
			case 'droitsData' :
				$sql= 'SELECT membre_pseudo,membre_rang
                FROM client WHERE membre_pseudo = ?';
				break;
				
			case  'bannissement':
		       $sql='SELECT membre_id, membre_pseudo 
				  FROM client WHERE membre_rang = 0';
				 break;
				 
				 
				 case 'editOKData':
				$sql='SELECT membre_pseudo FROM client
				WHERE membre_id = ?';
				break;
				
				case 'nombrepseudo':
				$sql='SELECT COUNT(*) 
				FROM client 
				WHERE membre_pseudo = ?';
				break;
				
				case 'banOKData':
				$sql='SELECT membre_id 
				FROM client WHERE membre_pseudo = ?';
	            break;
				
				case 'deBanOKData':	
				$sql='SELECT membre_id FROM client 
				WHERE membre_rang = 0';
				break;
				
    	}

			$this->selectById= Controller_Template::$db->prepare($sql);
			return $this->selectById;
    }
	
	
	
	public function recupReqUpdate($type) 
	{
	
	  switch($type)
          {
		  
		   case 'banUpOKData':
			    $sql='UPDATE client SET membre_rang = 0 
			WHERE membre_id = ?';
			     break;
			
			case 'deBanUpOKData':
				$sql='UPDATE client SET membre_rang = 2 
				WHERE membre_id = ?';
				break;
			
			 }		    
			 $this->updateById= Controller_Template::$db->prepare($sql);
			return $this->updateById;  
	 }
}